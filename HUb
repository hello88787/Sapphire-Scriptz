--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.3) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v92=v5(v83,v19);v19=nil;return v92;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=0 -0 ;local v85;while true do if (v84==0) then v85=(v31/(2^(v32-(2 -1))))%((3 -1)^(((v33-((879 -(282 + 595)) -(1638 -(1523 + 114)))) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v85-(v85%(569 -(367 + 201))) ;end end else local v86=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==((118 -(32 + 85)) -0)) then return (v37 * (251 + 5)) + v36 ;end if (v35==(1065 -(68 + 997))) then v36,v37=v1(v16,v18,v18 + ((283 + 989) -(226 + 1044)) );v18=v18 + 2 ;v35=4 -3 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (960 -(892 + 65)) );v18=v18 + (9 -5) ;return (v41 * (31011612 -14234396)) + (v40 * ((120662 -(87 + 263)) -(54956 -(67 + 113)))) + (v39 * 256) + v38 ;end local function v24() local v42=0 + (438 -(145 + 293)) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==((432 -(44 + 386)) -(1 + 0))) then v45=1 + (772 -(201 + 571)) ;v46=(v20(v44,3 -2 ,972 -(802 + 150) ) * ((5 -3)^(57 -25))) + v43 ;v42=2 + 0 ;end if (v42==(1000 -(915 + 82))) then if (v47==((1138 -(116 + 1022)) -0)) then if (v46==(0 + 0)) then return v48 * (0 -0) ;else v47=1188 -(1069 + 118) ;v45=0;end elseif (v47==2047) then return ((v46==0) and (v48 * ((2 -1)/(0 -(1486 -(998 + 488)))))) or (v48 * NaN) ;end return v8(v48,v47-(178 + 845) ) * (v45 + (v46/(2^(92 -40)))) ;end if (v42==(0 + 0)) then v43=v23();v44=v23();v42=792 -(368 + 135 + 288) ;end if (v42==2) then v47=v20(v44,65 -44 ,(203 -154) -(10 + 8) );v48=((v20(v44,122 -90 )==(443 -(416 + 26))) and  -(3 -2)) or (1 + 0) ;v42=4 -1 ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;local v51={};for v66=3 -2 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52~=(2 + 1)) then else v59=nil;while true do local v93=285 -(134 + 151) ;while true do if (v93==(851 -(20 + 830))) then if (v53~=(0 + 0)) then else local v99=0;while true do if ((1666 -(970 + 695))==v99) then v56={};v53=1 -0 ;break;end if (v99==(126 -(116 + 10))) then v54={};v55={};v99=1 + 0 ;end end end if (v53==(1992 -(582 + 1408))) then local v100=0 -0 ;while true do if ((739 -(542 + 196))~=v100) then else for v105=1 -0 ,v23() do local v106=0;local v107;local v108;while true do if (v106~=(0 -0)) then else v107=0 -0 ;v108=nil;v106=1825 -(1195 + 629) ;end if ((1 -0)==v106) then while true do if (v107==(241 -(187 + 54))) then v108=v21();if (v20(v108,781 -(162 + 618) ,1)~=(0 + 0)) then else local v425=0 + 0 ;local v426;local v427;local v428;local v429;local v430;while true do if (v425~=1) then else v428=nil;v429=nil;v425=2;end if (v425~=2) then else v430=nil;while true do if (v426==(0 -0)) then local v446=0 -0 ;while true do if (v446~=(0 + 0)) then else v427=1636 -(1373 + 263) ;v428=nil;v446=1;end if (v446~=1) then else v426=1 + 0 ;break;end end end if (v426~=2) then else while true do if (v427==(1 + 1)) then local v448=0;local v449;while true do if (v448==0) then v449=0;while true do if (v449==(1001 -(451 + 549))) then v427=1 + 2 ;break;end if ((1551 -(1126 + 425))==v449) then local v457=405 -(118 + 287) ;while true do if (v457==0) then if (v20(v429,1 -0 ,1 -0 )==1) then v430[1123 -(118 + 1003) ]=v59[v430[5 -3 ]];end if (v20(v429,1386 -(746 + 638) ,2)~=(1 + 0)) then else v430[4 -1 ]=v59[v430[344 -(218 + 123) ]];end v457=1;end if (v457~=(1 + 0)) then else v449=1582 -(1535 + 46) ;break;end end end end break;end end end if (v427==(977 -(553 + 424))) then local v450=0 + 0 ;local v451;while true do if (v450==(0 -0)) then v451=0;while true do if (v451==(0 + 0)) then local v458=0;while true do if (v458==(560 -(306 + 254))) then local v460=0 + 0 ;while true do if (v460==(0 + 0)) then v428=v20(v108,2 + 0 ,2 + 1 );v429=v20(v108,7 -3 ,1473 -(899 + 568) );v460=1 + 0 ;end if (v460==1) then v458=1 + 0 ;break;end end end if (v458==(2 -1)) then v451=604 -(268 + 335) ;break;end end end if (v451==(2 -1)) then v427=291 -(60 + 230) ;break;end end break;end end end if (v427~=(573 -(426 + 146))) then else local v452=0 + 0 ;local v453;while true do if (v452==0) then v453=0;while true do if ((1 + 0)==v453) then v427=755 -(239 + 514) ;break;end if (v453~=(1456 -(282 + 1174))) then else local v459=0;while true do if (v459==(1329 -(797 + 532))) then local v461=0;while true do if (v461==0) then v430={v22(),v22(),nil,nil};if (v428==0) then local v466=0 + 0 ;local v467;local v468;local v469;while true do if (v466==(1025 -(706 + 318))) then v469=nil;while true do if (v467==1) then while true do if (v468==(1251 -(721 + 530))) then v469=0;while true do if ((1271 -(945 + 326))==v469) then v430[3]=v22();v430[4]=v22();break;end end break;end end break;end if (v467~=(0 -0)) then else v468=0 + 0 ;v469=nil;v467=1 + 0 ;end end break;end if (v466==(700 -(271 + 429))) then v467=0;v468=nil;v466=1 + 0 ;end end elseif (v428==(1501 -(1408 + 92))) then v430[241 -(64 + 174) ]=v23();elseif (v428==2) then v430[1089 -(461 + 625) ]=v23() -((1290 -(993 + 295))^(3 + 13)) ;elseif (v428==3) then local v472=0;local v473;local v474;while true do if (v472~=1) then else while true do if (v473==(0 -0)) then v474=0 + 0 ;while true do if (v474==(1171 -(418 + 753))) then v430[339 -(144 + 192) ]=v23() -((1 + 1)^16) ;v430[4]=v22();break;end end break;end end break;end if (v472==(0 + 0)) then v473=0 + 0 ;v474=nil;v472=1;end end end v461=1 + 0 ;end if (v461==(1505 -(363 + 1141))) then v459=1 + 0 ;break;end end end if (v459==(1 + 0)) then v453=530 -(406 + 123) ;break;end end end end break;end end end if (v427==(1772 -(1749 + 20))) then if (v20(v429,3 + 0 ,1 + 2 )==(1323 -(1249 + 73))) then v430[4]=v59[v430[4]];end v54[v105]=v430;break;end end break;end if ((1 + 0)==v426) then local v447=1145 -(466 + 679) ;while true do if (v447~=0) then else v429=nil;v430=nil;v447=2 -1 ;end if (v447~=1) then else v426=5 -3 ;break;end end end end break;end if (v425==(1900 -(106 + 1794))) then local v445=1933 -(565 + 1368) ;while true do if (v445~=(3 -2)) then else v425=1 + 0 ;break;end if (v445==(0 + 0)) then v426=1661 -(1477 + 184) ;v427=nil;v445=1;end end end end end break;end end break;end end end v53=8 -5 ;break;end if (v100==(0 -0)) then for v109=1 + 0 ,v58 do local v110=114 -(4 + 110) ;local v111;local v112;while true do if (v110==(584 -(57 + 527))) then v111=v21();v112=nil;v110=2 -1 ;end if (v110~=(305 -(244 + 60))) then else if (v111==(1428 -(41 + 1386))) then v112=v21()~=0 ;elseif (v111==(105 -(17 + 86))) then v112=v24();elseif (v111==3) then v112=v25();end v59[v109]=v112;break;end end end v57[3]=v21();v100=1 + 0 ;end end end break;end if ((476 -(41 + 435))==v93) then local v98=0 -0 ;while true do if (0==v98) then if (v53==(1002 -(938 + 63))) then local v102=0;local v103;while true do if (v102~=(0 -0)) then else v103=0;while true do if (v103==0) then v57={v54,v55,nil,v56};v58=v23();v103=3 -2 ;end if (v103~=(1 + 0)) then else v59={};v53=1 + 1 ;break;end end break;end end end if (v53~=(5 -2)) then else local v104=0;while true do if (v104~=(267 -(176 + 91))) then else for v130=66 -(30 + 35) ,v23() do v55[v130-(1 + 0) ]=v28();end return v57;end end end v98=2 -1 ;end if ((1 -0)~=v98) then else v93=1;break;end end end end end break;end if (v52==(1257 -(1043 + 214))) then v53=1875 -(157 + 1718) ;v54=nil;v52=3 -2 ;end if (v52==(1214 -(323 + 889))) then local v90=0 -0 ;while true do if ((580 -(361 + 219))==v90) then v57=nil;v58=nil;v90=1;end if (v90~=(321 -(53 + 267))) then else v52=1 + 2 ;break;end end end if (v52~=(2 -1)) then else local v91=0 -0 ;while true do if (v91~=1) then else v52=415 -(15 + 398) ;break;end if (v91~=(982 -(18 + 964))) then else v55=nil;v56=nil;v91=3 -2 ;end end end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=60) then if (v81<=29) then if (v81<=14) then if (v81<=6) then if (v81<=2) then if (v81<=0) then if (v78[v80[2]]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end elseif (v81>1) then local v133=0;local v134;while true do if (v133==0) then v134=v80[2];do return v13(v78,v134,v134 + v80[3] );end break;end end elseif (v80[2]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=4) then if (v81==3) then if (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]][v78[v80[3]]]=v78[v80[4]];end elseif (v81>5) then v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;else local v138=v80[2];v78[v138]=v78[v138](v13(v78,v138 + 1 ,v73));end elseif (v81<=10) then if (v81<=8) then if (v81==7) then local v140=0;local v141;local v142;local v143;local v144;while true do if (v140==1) then v73=(v143 + v141) -1 ;v144=0;v140=2;end if (2==v140) then for v406=v141,v73 do local v407=0;while true do if (v407==0) then v144=v144 + 1 ;v78[v406]=v142[v144];break;end end end break;end if (v140==0) then v141=v80[2];v142,v143=v71(v78[v141](v78[v141 + 1 ]));v140=1;end end else local v145=v78[v80[4]];if  not v145 then v72=v72 + 1 ;else local v343=0;while true do if (v343==0) then v78[v80[2]]=v145;v72=v80[3];break;end end end end elseif (v81==9) then v78[v80[2]]=v78[v80[3]] * v80[4] ;else v61[v80[3]]=v78[v80[2]];end elseif (v81<=12) then if (v81==11) then v78[v80[2]]=v62[v80[3]];elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>13) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);else local v152=0;local v153;local v154;local v155;while true do if (v152==0) then v153=v80[2];v154={v78[v153](v13(v78,v153 + 1 ,v73))};v152=1;end if (v152==1) then v155=0;for v408=v153,v80[4] do local v409=0;while true do if (v409==0) then v155=v155 + 1 ;v78[v408]=v154[v155];break;end end end break;end end end elseif (v81<=21) then if (v81<=17) then if (v81<=15) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==16) then v62[v80[3]]=v78[v80[2]];else local v159=v80[2];local v160={};for v295=1, #v77 do local v296=v77[v295];for v345=0, #v296 do local v346=0;local v347;local v348;local v349;while true do if (v346==1) then v349=v347[2];if ((v348==v78) and (v349>=v159)) then v160[v349]=v348[v349];v347[1]=v160;end break;end if (v346==0) then v347=v296[v345];v348=v347[1];v346=1;end end end end end elseif (v81<=19) then if (v81==18) then v78[v80[2]]=v61[v80[3]];elseif (v78[v80[2]]~=v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==20) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v78[v80[2]]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end elseif (v81<=25) then if (v81<=23) then if (v81>22) then local v163=v80[2];do return v78[v163](v13(v78,v163 + 1 ,v80[3]));end else do return v78[v80[2]]();end end elseif (v81>24) then if (v80[2]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v164=v80[2];v78[v164]=v78[v164](v13(v78,v164 + 1 ,v80[3]));end elseif (v81<=27) then if (v81>26) then local v166=v69[v80[3]];local v167;local v168={};v167=v10({},{__index=function(v297,v298) local v299=0;local v300;while true do if (v299==0) then v300=v168[v298];return v300[1][v300[2]];end end end,__newindex=function(v301,v302,v303) local v304=0;local v305;while true do if (v304==0) then v305=v168[v302];v305[1][v305[2]]=v303;break;end end end});for v306=1,v80[4] do v72=v72 + 1 ;local v307=v68[v72];if (v307[1]==34) then v168[v306-1 ]={v78,v307[3]};else v168[v306-1 ]={v61,v307[3]};end v77[ #v77 + 1 ]=v168;end v78[v80[2]]=v29(v166,v167,v62);else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81==28) then v78[v80[2]]=v80[3];else local v174=0;local v175;local v176;local v177;while true do if (v174==1) then v177=v80[3];for v413=1,v177 do v176[v413]=v78[v175 + v413 ];end break;end if (v174==0) then v175=v80[2];v176=v78[v175];v174=1;end end end elseif (v81<=44) then if (v81<=36) then if (v81<=32) then if (v81<=30) then v78[v80[2]]=v80[3]~=0 ;elseif (v81==31) then v78[v80[2]][v80[3]]=v80[4];else do return;end end elseif (v81<=34) then if (v81>33) then v78[v80[2]]=v78[v80[3]];else local v182=v80[2];local v183={v78[v182](v78[v182 + 1 ])};local v184=0;for v309=v182,v80[4] do local v310=0;while true do if (v310==0) then v184=v184 + 1 ;v78[v309]=v183[v184];break;end end end end elseif (v81>35) then if (v78[v80[2]]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]();end elseif (v81<=40) then if (v81<=38) then if (v81==37) then v78[v80[2]]=v62[v80[3]];else local v187=v80[2];do return v13(v78,v187,v73);end end elseif (v81==39) then v72=v80[3];else local v189=v80[2];local v190={};for v311=1, #v77 do local v312=v77[v311];for v355=0, #v312 do local v356=v312[v355];local v357=v356[1];local v358=v356[2];if ((v357==v78) and (v358>=v189)) then v190[v358]=v357[v358];v356[1]=v190;end end end end elseif (v81<=42) then if (v81>41) then v78[v80[2]]=v80[3]^v78[v80[4]] ;else local v192=0;local v193;while true do if (v192==0) then v193=v80[2];v78[v193](v13(v78,v193 + 1 ,v80[3]));break;end end end elseif (v81>43) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v29(v69[v80[3]],nil,v62);end elseif (v81<=52) then if (v81<=48) then if (v81<=46) then if (v81==45) then local v195=0;local v196;local v197;local v198;while true do if (v195==0) then v196=v80[2];v197=v78[v196];v195=1;end if (v195==1) then v198=v80[3];for v421=1,v198 do v197[v421]=v78[v196 + v421 ];end break;end end else local v199=0;while true do if (v199==0) then v78[v80[2]]=v80[3]~=0 ;v72=v72 + 1 ;break;end end end elseif (v81==47) then v61[v80[3]]=v78[v80[2]];else v78[v80[2]]=v80[3];end elseif (v81<=50) then if (v81>49) then local v204=0;local v205;local v206;while true do if (v204==0) then v205=v80[3];v206=v78[v205];v204=1;end if (v204==1) then for v424=v205 + 1 ,v80[4] do v206=v206   .. v78[v424] ;end v78[v80[2]]=v206;break;end end else v78[v80[2]]=v78[v80[3]] + v78[v80[4]] ;end elseif (v81>51) then do return;end else local v208=v80[2];v78[v208]=v78[v208](v13(v78,v208 + 1 ,v80[3]));end elseif (v81<=56) then if (v81<=54) then if (v81==53) then v78[v80[2]]=v78[v80[3]][v78[v80[4]]];else local v212=v80[2];v78[v212](v78[v212 + 1 ]);end elseif (v81==55) then if (v80[2]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=58) then if (v81==57) then v78[v80[2]]=v78[v80[3]]/v80[4] ;elseif (v78[v80[2]]~=v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>59) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=90) then if (v81<=75) then if (v81<=67) then if (v81<=63) then if (v81<=61) then local v114=v80[2];local v115,v116=v71(v78[v114](v78[v114 + 1 ]));v73=(v116 + v114) -1 ;local v117=0;for v124=v114,v73 do local v125=0;while true do if (v125==0) then v117=v117 + 1 ;v78[v124]=v115[v117];break;end end end elseif (v81>62) then do return v78[v80[2]];end else v78[v80[2]]=v80[3]~=0 ;v72=v72 + 1 ;end elseif (v81<=65) then if (v81==64) then local v217=v80[2];local v218={v78[v217](v78[v217 + 1 ])};local v219=0;for v313=v217,v80[4] do v219=v219 + 1 ;v78[v313]=v218[v219];end else local v220=v80[2];local v221=v80[4];local v222=v220 + 2 ;local v223={v78[v220](v78[v220 + 1 ],v78[v222])};for v316=1,v221 do v78[v222 + v316 ]=v223[v316];end local v224=v223[1];if v224 then v78[v222]=v224;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81==66) then local v225=v78[v80[4]];if  not v225 then v72=v72 + 1 ;else v78[v80[2]]=v225;v72=v80[3];end else local v226=v80[2];v78[v226](v78[v226 + 1 ]);end elseif (v81<=71) then if (v81<=69) then if (v81>68) then v78[v80[2]]=v78[v80[3]] * v78[v80[4]] ;else local v228=v80[2];do return v78[v228](v13(v78,v228 + 1 ,v80[3]));end end elseif (v81>70) then v78[v80[2]]=v78[v80[3]] + v78[v80[4]] ;else local v230=v80[2];local v231=v78[v80[3]];v78[v230 + 1 ]=v231;v78[v230]=v231[v80[4]];end elseif (v81<=73) then if (v81>72) then if (v80[2]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v235=v80[2];v78[v235]=v78[v235](v13(v78,v235 + 1 ,v73));end elseif (v81==74) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v237=v69[v80[3]];local v238;local v239={};v238=v10({},{__index=function(v319,v320) local v321=v239[v320];return v321[1][v321[2]];end,__newindex=function(v322,v323,v324) local v325=v239[v323];v325[1][v325[2]]=v324;end});for v327=1,v80[4] do v72=v72 + 1 ;local v328=v68[v72];if (v328[1]==34) then v239[v327-1 ]={v78,v328[3]};else v239[v327-1 ]={v61,v328[3]};end v77[ #v77 + 1 ]=v239;end v78[v80[2]]=v29(v237,v238,v62);end elseif (v81<=82) then if (v81<=78) then if (v81<=76) then local v118=v80[2];local v119={v78[v118](v13(v78,v118 + 1 ,v73))};local v120=0;for v126=v118,v80[4] do v120=v120 + 1 ;v78[v126]=v119[v120];end elseif (v81>77) then if (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81<=80) then if (v81==79) then v78[v80[2]]=v78[v80[3]] + v80[4] ;else v78[v80[2]]=v78[v80[3]]/v80[4] ;end elseif (v81==81) then local v245=v80[2];v78[v245]=v78[v245](v78[v245 + 1 ]);else do return v78[v80[2]];end end elseif (v81<=86) then if (v81<=84) then if (v81>83) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v78[v80[3]] * v78[v80[4]] ;end elseif (v81>85) then if (v80[2]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end else v78[v80[2]]();end elseif (v81<=88) then if (v81>87) then v78[v80[2]]={};elseif (v78[v80[2]]<v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>89) then local v250=0;local v251;while true do if (v250==0) then v251=v80[2];v78[v251]=v78[v251](v78[v251 + 1 ]);break;end end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=105) then if (v81<=97) then if (v81<=93) then if (v81<=91) then local v121=0;local v122;local v123;while true do if (1==v121) then for v375=v122 + 1 ,v80[4] do v123=v123   .. v78[v375] ;end v78[v80[2]]=v123;break;end if (v121==0) then v122=v80[3];v123=v78[v122];v121=1;end end elseif (v81>92) then local v254=v80[2];local v255=v78[v254];for v333=v254 + 1 ,v80[3] do v7(v255,v78[v333]);end else v78[v80[2]]=v78[v80[3]] * v80[4] ;end elseif (v81<=95) then if (v81==94) then v78[v80[2]]={};else v78[v80[2]]= #v78[v80[3]];end elseif (v81>96) then local v259=v80[2];do return v13(v78,v259,v73);end else v78[v80[2]]=v78[v80[3]] + v80[4] ;end elseif (v81<=101) then if (v81<=99) then if (v81>98) then v78[v80[2]]=v80[3]^v78[v80[4]] ;else local v262=v80[2];local v263=v78[v80[3]];v78[v262 + 1 ]=v263;v78[v262]=v263[v80[4]];end elseif (v81>100) then for v334=v80[2],v80[3] do v78[v334]=nil;end else v78[v80[2]]=v78[v80[3]] -v78[v80[4]] ;end elseif (v81<=103) then if (v81==102) then do return v78[v80[2]]();end elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==104) then v62[v80[3]]=v78[v80[2]];else local v270=v80[2];local v271=v80[4];local v272=v270 + 2 ;local v273={v78[v270](v78[v270 + 1 ],v78[v272])};for v336=1,v271 do v78[v272 + v336 ]=v273[v336];end local v274=v273[1];if v274 then local v377=0;while true do if (v377==0) then v78[v272]=v274;v72=v80[3];break;end end else v72=v72 + 1 ;end end elseif (v81<=113) then if (v81<=109) then if (v81<=107) then if (v81>106) then v78[v80[2]]=v78[v80[3]][v78[v80[4]]];else local v277=0;local v278;while true do if (0==v277) then v278=v80[2];v78[v278](v13(v78,v278 + 1 ,v73));break;end end end elseif (v81==108) then v78[v80[2]][v78[v80[3]]]=v78[v80[4]];else local v281=0;local v282;while true do if (v281==0) then v282=v80[2];v78[v282]=v78[v282]();break;end end end elseif (v81<=111) then if (v81==110) then local v283=v80[2];v78[v283](v13(v78,v283 + 1 ,v73));else v78[v80[2]]=v61[v80[3]];end elseif (v81>112) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=117) then if (v81<=115) then if (v81>114) then v78[v80[2]][v80[3]]=v78[v80[4]];else v78[v80[2]]= #v78[v80[3]];end elseif (v81>116) then for v339=v80[2],v80[3] do v78[v339]=nil;end elseif (v80[2]<v78[v80[4]]) then v72=v80[3];else v72=v72 + 1 ;end elseif (v81<=119) then if (v81==118) then local v291=v80[2];v78[v291](v13(v78,v291 + 1 ,v80[3]));elseif (v78[v80[2]]<=v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==120) then local v292=0;local v293;while true do if (v292==0) then v293=v80[2];v78[v293]=v78[v293]();break;end end else v72=v80[3];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
